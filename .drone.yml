kind: pipeline
type: docker
name: default

volumes: # 定义流水线挂载目录，用于共享数据
  - name: maven-service
    host:
      path: /goeasy1.4/

steps:

#  - name: build-package # 流水线名称
#    image: maven:3.6.3-openjdk-11 # 定义创建容器的Docker镜像
#    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
#      - name: maven-service
#        path: /drone/src/service # 将应用打包好的Jar和执行脚本挂载出来
#    commands: # 定义在Docker容器中执行的shell命令
#      - ls
#      - mvn clean package # 应用打包命令
#      - ls
#      - cp target/hydronedemo-0.0.1-SNAPSHOT.jar /drone/src/service/hydronedemo-0.0.1-SNAPSHOT.jar
##      - cp Dockerfile /drone/src/service/Dockerfile
#      - cd /drone/src/service/
#      - ls


  - name: generate-docker
    image: plugins/docker:latest
    settings:
        username:
          from_secret: docker_registry_username_tencent
        password:
          from_secret: docker_registry_password_tencent
        repo: ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos
        tags: latest
        registry: ccr.ccs.tencentyun.com

  - name: deploy-start
    image: appleboy/drone-ssh # SSH工具镜像
    settings:
      host: 8.218.102.216 # 远程连接地址
      username: root # 远程连接账号
      password: Uwant123!
      port: 22 # 远程连接端口
      command_timeout: 5m # 远程执行命令超时时间
      script:
        - cd /goeasy1.4/
        - ls
        - pwd
        - docker stop drone-demo
        - echo '----stop container----'
        - docker rm drone-demo
        - echo '----rm container----'
        - docker login ccr.ccs.tencentyun.com --username 100022818203 --password ys184aini
        - docker pull ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
        - docker run -p 8080:8080 --name drone-demo ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
        - echo '----start container1----'