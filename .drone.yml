kind: pipeline
type: docker
name: default
#clone:
#  disable: true  #禁用默认克隆

volumes: # 定义流水线挂载目录，用于共享数据
  - name: maven-build
    host:
      path: /goeasy1.4/source/ # 从宿主机中挂载的目录
  - name: maven-service
    host:
      path: /goeasy1.4/service/

steps:
#  - name: clone-test
#    image: alpine/git
#    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
#      - name: maven-build
#        path: /drone/src/source #将应用打包好的Jar和执行脚本挂载出来
#    commands:
#      - pwd
#      - ls
#      - cd source
#      - git clone https://github.com/zhy1733079927/hydronedemo.git  #自定义克隆地址
#      - git version
#      - ls
#
#
  - name: build-package # 流水线名称
    image: maven:3.6.3-openjdk-11 # 定义创建容器的Docker镜像
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: maven-build
        path: /drone/src/source # 将应用打包好的Jar和执行脚本挂载出来
      - name: maven-service
        path: /drone/src/service # 将应用打包好的Jar和执行脚本挂载出来
    commands: # 定义在Docker容器中执行的shell命令
#      - cd source/hydronedemo/
#      - ls
      - pwd
      - ls
#      - mvn clean package # 应用打包命令
#      - ls
#      - cp target/hydronedemo-0.0.1-SNAPSHOT.jar /drone/src/service/hydronedemo-0.0.1-SNAPSHOT.jar
#      - cp Dockerfile /drone/src/service/Dockerfile
#      - cd /drone/src/source/
#      - rm -rf hydronedemo/
#      - cd /drone/src/service
#      - ls
#
#
#  - name: deploy-start # 流水线名称
#    image: openjdk:8u302-jre # 定义创建容器的Docker镜像
#    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
#      - name: maven-service
#        path: /drone/src/service # 将应用打包好的Jar和执行脚本挂载出来
#    commands: # 定义在Docker容器中执行的shell命令
#      - cp /drone/src/service/hydronedemo-0.0.1-SNAPSHOT.jar /drone/src/hydronedemo-0.0.1-SNAPSHOT.jar
#      - cd /drone/src/service/
#      - rm -rf hydronedemo-0.0.1-SNAPSHOT.jar
#      - cd ..
#      - ls
#      - nohup java -jar hydronedemo-0.0.1-SNAPSHOT.jar --server.port=8080 > log.output 2>&1 &
#      - ls
#      - tail -f log.output

#  - name: deploy-start
#    image: appleboy/drone-ssh # SSH工具镜像
#    settings:
#        host: 47.52.141.48 # 远程连接地址
#        username: root # 远程连接账号
#        password: Uwant123!
#        port: 22 # 远程连接端口
#        command_timeout: 5m # 远程执行命令超时时间
#        script:
#          - cd /goeasy1.4/service/ # 进入宿主机构建目录
#          - ls
#          - nohup java -jar hydronedemo-0.0.1-SNAPSHOT.jar --server.port=8080 2>&1 &

#  - name: deploy-start
#    image: appleboy/drone-ssh # SSH工具镜像
#    settings:
#      host: 47.52.141.48 # 远程连接地址
#      username: root # 远程连接账号
#      password: Uwant123!
#      port: 22 # 远程连接端口
#      command_timeout: 5m # 远程执行命令超时时间
#      script:
#        - cd /goeasy1.4/service/ # 进入宿主机构建目录
#        - ls
#        - docker stop drone-demo
#        - echo '----stop container----'
#        - docker rm drone-demo
#        - echo '----rm container----'
#        - docker rmi hy/drone-demo:latest
#        - echo '----rm image----'
#        - docker build -t hy/drone-demo:latest .
#        - echo '----build image----'
#        - docker run -p 8080:8080 --name drone-demo hy/drone-demo:latest
#        - echo '----start container----'

#  - name: deploy-push
#    image: appleboy/drone-ssh # SSH工具镜像
#    settings:
#      host: 47.52.141.48 # 远程连接地址
#      username: root # 远程连接账号
#      password: Uwant123!
#      port: 22 # 远程连接端口
#      command_timeout: 5m # 远程执行命令超时时间
#      script:
#        - cd /goeasy1.4/service/ # 进入宿主机构建目录
#        - ls
#        - docker rmi hy/drone-demo:latest
#        - echo '----rm image----'
#        - docker build -t hy/drone-demo:latest .
#        - docker login ccr.ccs.tencentyun.com --username 100022818203 --password ys184aini
#        - docker tag hy/drone-demo:latest ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
#        - docker push ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
#        - echo '----push image----'
#        - docker rmi ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
#        - docker rmi hy/drone-demo:latest
#        - echo '----remove image----'
#
#  - name: deploy-start
#    image: appleboy/drone-ssh # SSH工具镜像
#    settings:
#      host: 47.52.141.48 # 远程连接地址
#      username: root # 远程连接账号
#      password: Uwant123!
#      port: 22 # 远程连接端口
#      command_timeout: 5m # 远程执行命令超时时间
#      script:
#        - cd /goeasy1.4/service/ # 进入宿主机构建目录
#        - ls
#        - docker stop drone-demo
#        - echo '----stop container----'
#        - docker rm drone-demo
#        - echo '----rm container----'
#        - docker login ccr.ccs.tencentyun.com --username 100022818203 --password ys184aini
#        - docker pull ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
#        - docker run -p 8080:8080 --name drone-demo ccr.ccs.tencentyun.com/hy-docker-demos/docker-demos:latest
#        - echo '----start container----'